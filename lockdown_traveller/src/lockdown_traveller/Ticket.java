/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lockdown_traveller;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajendrasaxena
 */
public class Ticket extends javax.swing.JFrame {
static String pnr,username;
//public static boolean flag=false;
static int pasn,si,sd,p,q,pasw;
String p1n="-1",p2n="-1",p3n="-1",p4n="-1",p5n="-1",passn="",passw="";
    String p1a="-1",p2a="-1",p3a="-1",p4a="-1",p5a="-1";
    String p1g="-1",p2g="-1",p3g="-1",p4g="-1",p5g="-1";
    String p1p="-1",p2p="-1",p3p="-1",p4p="-1",p5p="-1";
    String p1b="-1",p2b="-1",p3b="-1",p4b="-1",p5b="-1";
    String date="",tnum="",tnm="",farel="",distl="",so="",ds="",cls="";
    /**
     * Creates new form Ticket
     */
    public Ticket() {
        initComponents();
    }
public void func() throws IOException{
    
    Socket s= new Socket("localhost",9140);
    DataOutputStream dout=new DataOutputStream(s.getOutputStream());
    DataInputStream din=new DataInputStream(s.getInputStream());

    dout.writeUTF(pnr);
 
//dout.writeUTF(pnr);

    if((username=din.readUTF()).equalsIgnoreCase("-1")){
        JOptionPane.showMessageDialog(rootPane, "No such pnr exist!!");
        this.setVisible(false);
    
    }else { 
    
    tnm=din.readUTF();
    tnum=din.readUTF();
    date=din.readUTF();
    p1n=din.readUTF();
    p1a=din.readUTF();
    p1g=din.readUTF();
    p1b=din.readUTF();
    p2n=din.readUTF();
    p2a=din.readUTF();
    p2g=din.readUTF();
    p2b=din.readUTF();
    p3n=din.readUTF();
    p3a=din.readUTF();
    p3g=din.readUTF();
    p3b=din.readUTF();
    p4n=din.readUTF();
    p4a=din.readUTF();
    p4g=din.readUTF();
    p4b=din.readUTF();
    p5n=din.readUTF();
    p5a=din.readUTF();
    p5g=din.readUTF();
    p5b=din.readUTF();
    so=din.readUTF();
    ds=din.readUTF();
    farel=din.readUTF();
    distl=din.readUTF();
    cls=din.readUTF();
    passn=din.readUTF();
    
       passw=din.readUTF(); 
   
    
    System.out.println("donerecieving");
    pasw=Integer.parseInt(passw);
    pasn=Integer.parseInt(passn);
    doj.setText("Date of journey : "+date);
    clas.setText("Class : "+cls);
    dest.setText("Destination : "+ds);
    dist.setText("Distance : "+distl);
    fare.setText("Fare : "+farel);
    source.setText("Source : "+so);
    trainname.setText("Train name : "+tnm);
    trainnum.setText("Train number : "+tnum);
    DefaultTableModel model = (DefaultTableModel) table.getModel();
        
    if(!p1n.equalsIgnoreCase("-1")){
        Object row[]={p1n,p1a,p1b,p1g};
        
        model.addRow(row);
    }
    if(!p2n.equalsIgnoreCase("-1")){
        Object row[]={p2n,p2a,p2b,p2g};
        
        model.addRow(row);
    }
    if(!p3n.equalsIgnoreCase("-1")){
        Object row[]={p3n,p3a,p3b,p3g};
        
        model.addRow(row);
    }
    if(!p4n.equalsIgnoreCase("-1")){
        Object row[]={p4n,p4a,p4b,p4g};
        
        model.addRow(row);
    }
    if(!p5n.equalsIgnoreCase("-1")){
        Object row[]={p5n,p5a,p5b,p5g};
        
        model.addRow(row);
    }}
   
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        trainnum = new javax.swing.JLabel();
        trainname = new javax.swing.JLabel();
        doj = new javax.swing.JLabel();
        clas = new javax.swing.JLabel();
        source = new javax.swing.JLabel();
        dest = new javax.swing.JLabel();
        fare = new javax.swing.JLabel();
        dist = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        canc = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        trainnum.setText("jLabel1");

        trainname.setText("jLabel1");

        doj.setText("jLabel1");

        clas.setText("jLabel1");

        source.setText("jLabel1");

        dest.setText("jLabel1");

        fare.setText("jLabel1");

        dist.setText("jLabel1");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Seat", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        canc.setText("Cancel Ticket");
        canc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancActionPerformed(evt);
            }
        });

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(trainnum, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(trainname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(source, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(dest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(canc, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainnum)
                    .addComponent(source))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainname)
                    .addComponent(dest))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doj)
                    .addComponent(fare))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clas)
                    .addComponent(dist))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(canc)
                    .addComponent(jButton2))
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancActionPerformed
    if(cls.equalsIgnoreCase("Chair Car")){
        
          //  System.out.println("new");
            
        try {
            Socket soc1=new Socket("localhost",9060);
            DataOutputStream dout1=new DataOutputStream(soc1.getOutputStream());
            dout1.writeUTF("select * from train where train_number ='"+tnum+"' AND date='"+date+"'");
            DataInputStream din1=new DataInputStream(soc1.getInputStream());
            tnum=din1.readUTF();
            tnm=din1.readUTF();
        int couch = Integer.parseInt(din1.readUTF());
           String winda=din1.readUTF();
            //norma=din1.readUTF();
            String route=din1.readUTF();
             String norma=din1.readUTF();
             System.out.println(route);
            System.out.println(norma);
            System.out.println(winda+" ");
              q=0;
              int i,j;
            for(i=0;i<route.length();i++){
                    if(route.charAt(i)=='$'){
                        q++;
                    }
                }
             String te=din1.readUTF();
            int []dw=new int[q];
              
            int []dn=new int[q];
            String s5="",d3="",s6="";
             p=0;
            System.out.println("new");
               int  []d4=new int[q];
                String []s4=new String[q];
for(i=0;i<route.length();i++){System.out.println("new");
                    if(route.charAt(i)=='$'){
                        s6="";
                        d3="";
                        j=0;
                        while(s5.charAt(j)!='%'){
                            s6+=s5.charAt(j);
                            j++;
                        }
                        j++;
                        while(j<s5.length()){
                            d3+=s5.charAt(j);
                            j++;
                        }
                        System.out.println(s6+"\t");
                        s4[p]=s6;
                        d4[p]=Integer.parseInt(d3);
                        if(s4[p].equalsIgnoreCase(so)){
                            si=p;
                        }
                        if(s4[p].equalsIgnoreCase(ds)){
                            sd=p;
                        }
                        System.out.println(d4[p]);
                        p++;
                        //System.out.println(s5);
                        s5="";
                    }
                    else {
                        s5+=route.charAt(i);      
                    }
                }
System.out.println("new");
                s5="";
                p=0;
                for(i=0;i<winda.length();i++){
                    if(winda.charAt(i)=='$'){
                     dw[p]=Integer.parseInt(s5);
                     s5="";
                     p++;
                    }
                    else {
                        s5+=winda.charAt(i);
                    }
                }
                s5="";
                p=0;
                for(i=0;i<norma.length();i++){
                    if(norma.charAt(i)=='$'){
                     dn[p]=Integer.parseInt(s5);
                     s5="";
                     p++;
                    }
                    else {
                        s5+=norma.charAt(i);
                    }
                }
                
                for(i=si;i<sd;i++){
                    dw[i]-=pasw;
                    dn[i]-=pasn;
                }
                String str1="",str2="";
        for(i=0;i<q;i++){
            str1+=dw[i]+"$";
            str2+=dn[i]+"$";
        }
        String sql1="",sql2="";
        sql1="update train set chaircar_window='"+str1+"' where train_number = '"+tnum+"' AND date = '"+date+"'";
        sql2="update train set chaircar_normal='"+str2+"' where train_number = '"+tnum+"' AND date = '"+date+"'";
                try {
            Socket s11=new Socket("localhost",9100);
             DataOutputStream dout=new DataOutputStream(s11.getOutputStream());
                dout.writeUTF(sql1);
        } catch (IOException ex) {
            Logger.getLogger(RequestBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Socket s111=new Socket("localhost",9100);
             DataOutputStream dout=new DataOutputStream(s111.getOutputStream());
                dout.writeUTF(sql2);
        } catch (IOException ex) {
            Logger.getLogger(RequestBooking.class.getName()).log(Level.SEVERE, null, ex);
        }   
        try {
            Socket s11=new Socket("localhost",9100);
             DataOutputStream dout=new DataOutputStream(s11.getOutputStream());
                dout.writeUTF("delete from booking where pnr = '"+pnr+"'");
        } catch (IOException ex) {
            Logger.getLogger(RequestBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Socket s11=new Socket("localhost",9100);
             DataOutputStream dout=new DataOutputStream(s11.getOutputStream());
             String st3="insert into cancelledticket (pnr,username,trainname,trainnum,doj,p1n,p1a,p1g,p1b,p2n,p2a,p2g,p2b,p3n,p3a,p3g,p3b,p4n,p4a,p4g,p4b,p5n,p5a,p5g,p5b,source,destination,fare,distance,clas)";
             st3+="values ('"+pnr+"','"+username+"','"+tnm+"','"+tnum+"','"+date+"','";
             st3+=p1n+"','"+p1a+"','"+p1g+"','"+p1b+"','";
             st3+=p2n+"','"+p2a+"','"+p2g+"','"+p2b+"','";
             st3+=p3n+"','"+p3a+"','"+p3g+"','"+p3b+"','";
             st3+=p4n+"','"+p4a+"','"+p4g+"','"+p4b+"','";
             st3+=p5n+"','"+p5a+"','"+p5g+"','"+p5b+"','";
             st3+=so+"','"+sd+"','"+farel+"','"+distl+"','"+cls+"')";
             
                dout.writeUTF(st3);
        } catch (IOException ex) {
            Logger.getLogger(RequestBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        } catch (IOException ex) {
            Logger.getLogger(Ticket.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
                      
            //System.out.println("new");
           
                
               
                
                
                
    }
    this.setVisible(false);
    }//GEN-LAST:event_cancActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ticket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton canc;
    private javax.swing.JLabel clas;
    private javax.swing.JLabel dest;
    private javax.swing.JLabel dist;
    private javax.swing.JLabel doj;
    private javax.swing.JLabel fare;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel source;
    private javax.swing.JTable table;
    private javax.swing.JLabel trainname;
    private javax.swing.JLabel trainnum;
    // End of variables declaration//GEN-END:variables
}
